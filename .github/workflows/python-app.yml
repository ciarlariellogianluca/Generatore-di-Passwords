name: CICD

on:
  push:
    branches: ["master"]     # o "main" se usi main
  pull_request:
    branches: ["master"]

permissions:
  contents: read

jobs:
  build-test-and-docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"   # localmente usi 3.13; metti qui la versione che preferisci
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
          python -m pip install pytest hypothesis pytest-cov pylint
          # installa il tuo pacchetto in editable cos√¨ i test vedono i sorgenti locali
          pip install -e .

      - name: Lint with pylint
        run: |
          # Linta il tuo package; togli --exit-zero se vuoi che fallisca in caso di problemi
          pylint progetto --exit-zero

      - name: Run tests with coverage
        run: |
          # Coverage sul package "progetto" + report testuale e XML (utile per badge o upload)
          pytest --cov=progetto --cov-report=term-missing --cov-report=xml

      - name: Upload coverage.xml (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Build Python package (wheel + sdist)
        run: |
          python -m build

      - name: Upload dist/ (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/

      # Login a Docker Hub solo sui push (non sulle PR)
      - name: Docker login
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build and push
        if: github.event_name == 'push'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Sostituisci NAMESPACE/REPO con il tuo repo Docker Hub
          tags: |
            kgianni/genpw:latest
            kgianni/genpw:${{ github.sha }}
